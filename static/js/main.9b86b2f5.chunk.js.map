{"version":3,"sources":["component/UserAdd/UserAdd.js","defaultSetting.js","component/Settings/Settings.js","component/googleAward.js","App.js","serviceWorker.js","index.js"],"names":["UserAdd","props","inputChangeHandler","event","inputValue","target","value","setState","inputContent","tagRemoveHandler","index","newItems","state","allitems","splice","addClickHandler","newItem","alert","push","this","classes","Fragment","Paper","className","paper","TextField","id","textField","label","type","variant","onChange","Button","color","onClick","map","el","Card","key","card","Typography","gutterBottom","text","buttonClear","React","Component","withStyles","display","textAlign","backgroundColor","margin","padding","justifyContent","alignItems","width","borderColor","borderStyle","height","defaultSettings","allDefaultKeywords","allDefaultWebsites","Settings","checkboxChangeHandler","prevState","newType","settings","newSetting","console","log","numInputChangeHandler","newInput","inputs","name","newSettings","browserLeft","Object","entries","browsers","filter","devices","options","Grid","container","direction","justify","item","xs","FormGroup","row","FormControlLabel","control","Checkbox","checked","incognito","paperColumn","Input","input","waitFirst","inputProps","step","min","max","waitSecond","PageInSite","numPages","numPagesFirst","numPagesSecond","operationFirst","operationSecond","targetSite","timeTarget","timeReset","spacing","style","marginTop","onExport","borderRadius","border","onStop","onStart","flexDirection","icon","faTag","fontSize","faTv","magin","faCog","paddingLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b86b2f5.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport PropTypes from 'prop-types'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {\n    Paper,\n    TextField,\n    Card,\n    Typography\n} from '@material-ui/core'\n\n\n\nconst styles = {\n    card: {\n        display:\"flex\",\n\t\ttextAlign: \"left\",\n\t\tbackgroundColor: \"#263044\",\n\t\tmargin: \"10px auto\",\n\t\tpadding: \"15px\",\n        justifyContent: \"space-around\",\n        alignItems:\"center\",\n\t\twidth: \"100%\"\n\t},\n\tpaper: {\n        width:\"100%\",\n\t\tpadding: \"2px 4px\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n        backgroundColor: \"#263044\",\n    },\n    buttonClear:{\n        color:\"grey\",\n        backgroundColor:\"Transparent\",\n        borderColor:\"Transparent\",\n        borderStyle:\"none\",\n        height:\"80%\"\n    },\n    textField:{\n        margin:\"2%\",\n        width:\"80%\",\n        backgroundColor:\"white\"\n    },\n    text:{\n        color:\"#f5f6f7\"\n    }\n}\n\n\n\nclass UserAdd extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            inputContent:\"\",\n            allitems:[]\n        }\n    }\n\n\n    componentDidMount(){\n        this.setState({\n            allitems:this.props.allitems ? this.props.allitems : [],\n        })\n    }\n\n\n    inputChangeHandler = (event) => {\n        const inputValue = event.target.value\n        \n        this.setState({\n            inputContent:inputValue\n        })   \n    }\n\n    tagRemoveHandler = (index) => {\n        const newItems = [...this.state.allitems]\n        newItems.splice(index,1)\n        this.setState({\n            allitems:newItems\n        })\n    }\n\n\n    addClickHandler = (newItem) => {\n        if(newItem === \"\"){\n            alert(\"please use valid input\")\n        }else{\n            const newItems = [...this.state.allitems]\n            newItems.push(newItem)\n            this.setState({\n                inputContent:\"\",\n                allitems:newItems\n            })\n        }\n    }\n\n    render(){\n        const {classes} = this.props \n        return (\n            <React.Fragment>\n                <Paper className={classes.paper}>\n                    <TextField \n                        id=\"outlined-search\" \n                        className={classes.textField} \n                        label={this.props.label === \"Keywords\" ? \"enter your keywords here(optional)\" : \"enter your site here\"} \n                        type=\"search\" \n                        variant=\"outlined\" \n                        value={this.state.inputContent} \n                        onChange={this.inputChangeHandler} />\n                    <Button \n                        variant=\"contained\" \n                        color=\"secondary\" \n                        onClick={() => this.addClickHandler(this.state.inputContent)}>ADD</Button>\n                </Paper>\n                {this.state.allitems.map((el,index) => (\n                    <Card  key={el+\"_\"+index} className={classes.card}>\n                        <Typography variant=\"subtitle2\" gutterBottom className={classes.text}>{el}</Typography>\n                        <Button className={classes.buttonClear} onClick={() => this.tagRemoveHandler(index)}>\n                            Clear\n                        </Button>\n                    </Card>\n                ))}\n            </React.Fragment>\n        )\n    }\n\n}\n\nUserAdd.propTypes = {\n    allElement:PropTypes.arrayOf(PropTypes.string),\n    label:PropTypes.oneOf([\"Keywords\",\"Websites\"])\n}\n\n\nexport default withStyles(styles)(UserAdd);","\n\nconst defaultSettings = {\n    \"browsers\": {\n        \"chrome\": true,\n        \"firefox\": false,\n        \"safari\": true,\n        \"explorer\": false,\n        \"opera\": false,\n        \"incognito\": true,\n    },\n    \"inputs\": {\n        \"waitFirst\": 20,\n        \"waitSecond\": 50,\n        \"PageInSite\": false,\n        \"numPages\": 10,\n        \"numPagesFirst\": 40,\n        \"numPagesSecond\": 20,\n        \"operationFirst\": 30,\n        \"operationSecond\": 60,\n        \"targetSite\": 20,\n        \"timeTarget\": 10,\n        \"timeReset\": 20,\n    },\n    \"devices\": {\n        \"device\": true,\n        \"phone\": true,\n        \"mobileData\": false,\n        \"vinn\": false,\n        \"fly\": false,\n    },\n    \"options\": {\n        \"cookies\": true,\n        \"analytic\": false,\n        \"dataSaving\": true,\n        \"mouse\": true,\n        \"resolution\": false,\n        \"random\": false,\n        \"history\": true\n    }\n    \n} \n\nconst allDefaultKeywords = ['Shoes', 'Shoes carnival', 'Shoes palace', 'shoe stores near me', 'shoes for crew', 'shoes station', 'Shoes repair', 'Shoes for women', 'Shoes for fashion week', 'Shoes for instagram', 'Shoes stories', 'Shoes show']\n\nconst allDefaultWebsites = [['www.dockers.com', 'www.adidas.com', 'www.nike.com', 'www.underarmour.com', 'www.newbalance.com', 'www.puma.com', 'www.prada.com', 'www.fredperry.com', 'www.catapillar.com', 'www.gucci.com', 'www.almonds.com', 'www.brunoarmagio.com']]\n\nexport {\n    defaultSettings,\n    allDefaultKeywords,\n    allDefaultWebsites\n};","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport PropTypes from 'prop-types'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {\n    Checkbox,\n    Grid,\n    Paper,\n    FormGroup,\n    FormControlLabel, \n    Typography,\n    Input\n} from \"@material-ui/core\"\n\n\n\nconst styles = {\n    paper:{\n        width:\"100%\",\n        padding: \"3px 3px\",\n        margin:\"10px\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        backgroundColor: \"#263044\",\n    },\n    paperColumn:{\n        width:\"100%\",\n        height:\"250px\",\n        padding: \"5% 5%\",\n        margin:\"10px\",\n        display: \"flex\",\n        flexDirection:\"column\",\n        justifyContent: \"space-between\",\n        backgroundColor: \"#263044\",\n    },\n    input:{\n        margin: \"0 15px\",\n        width:\"45px\",\n        color:\"#f5f6f7\",\n        \n    },\n    text:{\n        color:\"#f5f6f7\"\n    }\n}\n\n\nclass Settings extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            settings:{}\n        }\n    }\n\n    componentWillMount(){\n\n        this.setState({\n            settings : this.props.defaultSettings\n        })\n    }\n\n    checkboxChangeHandler = (el,type) => {\n        this.setState((prevState) => {\n            const newType = {...prevState.settings[type]}\n            newType[el] = !prevState.settings[type][el]\n            const newSetting = {...prevState.settings}\n            newSetting[type] = newType\n            console.log(newSetting)\n            return {\n                settings:newSetting\n            } \n        })\n    }\n\n    numInputChangeHandler = (event) => {\n        const newInput = {...this.state.settings.inputs}\n        newInput[event.target.name] = event.target.value\n        const newSettings = {...this.state.settings}\n        newSettings.inputs = newInput\n        this.setState({\n            settings:newSettings\n        })\n    }\n\n    render(){\n        const { classes } = this.props\n        const browserLeft = Object.entries(this.state.settings.browsers).filter(([el,value]) => el !== \"incognito\")\n        const devices = Object.entries(this.state.settings.devices)\n        const options = Object.entries(this.state.settings.options)\n        return (\n            <React.Fragment>\n                <Grid container  \n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"center\">\n                    <Grid item xs={9}>\n                        <Paper className={classes.paper}>\n                            <FormGroup row>\n                                {browserLeft.map(([el,value]) => (<FormControlLabel\n                                        className={classes.text}\n                                        key={el}\n                                        control={<Checkbox checked={value} onChange={() => this.checkboxChangeHandler(el,\"browsers\")} value={el} />}\n                                        label={el}/>\n                                ))}\n                            </FormGroup>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={2}>\n                        <Paper className={classes.paper}>\n                        <FormControlLabel \n                            className={classes.text}\n                            control={<Checkbox\n                                checked={this.state.settings.browsers.incognito}\n                                onChange={() => this.checkboxChangeHandler(\"incognito\",\"browsers\")}\n                                value=\"incognito\"\n                            />}\n                            label=\"incognito\"/>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paperColumn}>\n                            <FormGroup row>\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>Wait</Typography>\n                               <Input\n                                    className={classes.input}\n                                    name='waitFirst'\n                                    value={this.state.settings.inputs.waitFirst}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                                <Input\n                                    className={classes.input}\n                                    name='waitSecond'\n                                    value={this.state.settings.inputs.waitSecond}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>seconds on the targeted website.</Typography>\n                            </FormGroup>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    className={classes.text}\n                                    control={<Checkbox\n                                        checked={this.state.settings.inputs.PageInSite}\n                                        onChange={() => this.checkboxChangeHandler(\"PageInSite\",\"inputs\")}\n                                        value=\"PageInSite\"\n                                        />}\n                                    label=\"Visit the Page within the Site\"/>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Input\n                                    className={classes.input}\n                                    name='numPages'\n                                    value={this.state.settings.inputs.numPages}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>Pages</Typography>\n                               <Input\n                                    className={classes.input}\n                                    name='numPagesFirst'\n                                    value={this.state.settings.inputs.numPagesFirst}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                                <Input\n                                    className={classes.input}\n                                    name='numPagesSecond'\n                                    value={this.state.settings.inputs.numPagesSecond}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>visit from to second.</Typography>\n                            </FormGroup>\n                            <FormGroup row>\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>After the operation is complete</Typography>\n                               <Input\n                                    className={classes.input}\n                                    name='operationFirst'\n                                    value={this.state.settings.inputs.operationFirst}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                                <Input\n                                    className={classes.input}\n                                    name='operationSecond'\n                                    value={this.state.settings.inputs.operationSecond}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}                                   \n                                    type=\"number\"\n                                />\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>seconds wait.</Typography>\n                            </FormGroup>\n                            <FormGroup row>\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>Target site</Typography>\n                               <Input\n                                    className={classes.input}\n                                    name='targetSite'\n                                    value={this.state.settings.inputs.targetSite}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>if not found times</Typography>\n                               <Input\n                                    className={classes.input}\n                                    name='timeTarget'\n                                    value={this.state.settings.inputs.timeTarget}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>minutes wait</Typography>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Input\n                                    className={classes.input}\n                                    name='timeReset'\n                                    value={this.state.settings.inputs.timeReset}\n                                    margin='dense'\n                                    onChange={(event) => this.numInputChangeHandler(event)}\n                                    inputProps={{\n                                        step: 1,\n                                        min: 0,\n                                        max: 100,\n                                        type: \"number\",\n                                        \"aria-labelledby\": \"input-slider\"\n                                    }}\n                                />\n                               <Typography className={classes.text} variant=\"body2\" gutterBottom>automatic reset after operation.</Typography>\n                            </FormGroup>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <FormGroup row>\n                                {devices.map(([el,value]) => (<FormControlLabel\n                                        key={el}\n                                        control={<Checkbox checked={value} onChange={() => this.checkboxChangeHandler(el,\"devices\")} value={el} />}\n                                        label={el}/>\n                                ))}\n                            </FormGroup>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <FormGroup row>\n                                {options.map(([el,value]) => (<FormControlLabel\n                                        key={el}\n                                        control={<Checkbox checked={value} onChange={() => this.checkboxChangeHandler(el,\"options\")} value={el} />}\n                                        label={el}/>\n                                ))}\n                            </FormGroup>\n                        </Paper>\n                    </Grid>\n                    <Grid \n                        container \n                        spacing={2}\n                        style={{marginTop:\"50px\"}}\n                        >\n\t\t\t\t        <Grid item xs={4}>\n                            <Button \n                                variant=\"contained\" \n                                onClick={() => this.props.onExport(this.state.settings)}\n                                style={{\n                                    backgroundColor:\"#f1c40f\",\n                                    borderRadius: 3,\n                                    border: 0,\n                                    color: 'white',\n                                    }}>Export</Button>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Button \n                                variant=\"contained\" \n                                onClick={() => this.props.onStop()}\n                                style={{\n                                    backgroundColor:\"#3498db\",\n                                    borderRadius: 3,\n                                    border: 0,\n                                    color: 'white',\n                                    }}>Stop</Button>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <Button \n                                variant=\"contained\" \n                                onClick={() => this.props.onStart(this.state.settings)}\n                                style={{\n                                    backgroundColor:\"#2ecc71\",\n                                    borderRadius: 3,\n                                    border: 0,\n                                    color: 'white',\n                                    }}>Start</Button>\n                        </Grid>\n                          \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n            \n        )\n    }\n\n}\n\nSettings.propTypes = {\n    onStart:PropTypes.func,\n    onStop:PropTypes.func,\n    onExport:PropTypes.func,\n    defaultSettings:PropTypes.object\n}\n\nexport default withStyles(styles)(Settings);","import React from 'react'\nimport UserAdd from './UserAdd/UserAdd'\nimport {\n    defaultSettings,\n    allDefaultKeywords,\n    allDefaultWebsites\n} from '../defaultSetting'\nimport Settings from './Settings/Settings'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTag,faTv,faCog } from '@fortawesome/free-solid-svg-icons'\nimport \"../App.css\";\nimport {\n    Grid,\n    Typography,\n} from '@material-ui/core'\n\nexport default props => {\n\n    return (\n        <Grid className=\"googleAward\"\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n        >\n            <Grid key=\"keywords\" item xs={3}>\n                <Grid container>\n                    <Grid item xs={2}>\n                        <FontAwesomeIcon icon={faTag} style={{color:\"blue\",fontSize:\"25px\",margin:\"0 50%\"}}/>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h5\" gutterBottom>Keywords</Typography>\n                    </Grid> \n                </Grid>\n                <UserAdd label=\"Keywords\" allitems={allDefaultKeywords}/>\n            </Grid>\n            <Grid key=\"website\" item xs={3}> \n                <Grid container>\n                    <Grid item xs={2}>\n                        <FontAwesomeIcon icon={faTv} style={{color:\"green\",fontSize:\"25px\",magin:\"0 50%\"}}/>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h5\" gutterBottom>Websites</Typography>\n                    </Grid> \n                </Grid>\n                <UserAdd label=\"Websites\" allitems={allDefaultWebsites}/>\n            </Grid>\n            <Grid key=\"settings\" item xs={5}>\n                <Grid container>\n                    <Grid item xs={2}>\n                        <FontAwesomeIcon icon={faCog} style={{color:\"yellow\",fontSize:\"25px\",paddingLeft:\"50%\"}}/>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h5\" gutterBottom>Settings</Typography>\n                    </Grid> \n                </Grid>\n                <Settings defaultSettings={defaultSettings} onStart={() => alert(\"onstart clicked\")} onStop={() => alert(\"onstop clicked\")} onExport={() => alert(\"onexport clicked\")}/>\n            </Grid>\n        \n        </Grid>\n    )\n}\n","import React from 'react';\nimport GoogleAwards from './component/googleAward'\n\nfunction App() {\n  return (\n    <GoogleAwards/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}